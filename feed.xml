<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>Dueyin</title><subtitle>这是通过Chirpy主题配置而成的</subtitle> <updated>2022-10-18T08:20:56+00:00</updated> <author> <name>Dueyin</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Dueyin </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>新老生预选赛题目选讲</title><link href="/posts/lesson-plan/" rel="alternate" type="text/html" title="新老生预选赛题目选讲" /><published>2022-10-16T14:07:00+00:00</published> <updated>2022-10-18T08:20:32+00:00</updated> <id>/posts/lesson-plan/</id> <content src="/posts/lesson-plan/" /> <author> <name>Dueyin</name> </author> <category term="讲义" /> <summary> 新老生预选赛题目选讲 ​ emmm，10月18号了，新生也快要入学了，但是新生们好像并不是很勤勉，希望大家加油啊，要入队了。 第一道题 E5 题目描述 有一个六位数，其个位数字7，现将个位数字移至首位（十万位），而其余各位数字顺序不变，均后退一位，得到一个新的六位数，假如新数为旧数的4倍，求原来的六位数。 题目分析 这是道填空题啊，打蓝桥杯的时候会遇到，像这种题我们有两种解法，如果是人力可以计算或者能一眼看出来的话就手搓结果就可以了，但如果我们一时想不出啥妙计，就使用程序吧，通过暴力计算，只要能等，程序会给你答案。 比如本题，结果是新数为旧数的四倍，所以我们遍历所有新数比旧数即可，可以发现，新数与旧数是数对，通过两个数的关系，我们发现遍历某个范围的数并将其改造成新数与旧数即可。本题可知旧数个位为’7’，新数十万位为’7’，剩下的部分相同，所以建立i通过遍历0~99999... </summary> </entry> <entry><title>「一本通 1.2 练习 2」扩散（经典题型精析）</title><link href="/posts/kmp_and_-sort/" rel="alternate" type="text/html" title="「一本通 1.2 练习 2」扩散（经典题型精析）" /><published>2022-10-16T01:48:00+00:00</published> <updated>2022-10-16T06:30:20+00:00</updated> <id>/posts/kmp_and_-sort/</id> <content src="/posts/kmp_and_-sort/" /> <author> <name>Duyin</name> </author> <category term="例题" /> <summary> 并查集求距离 题目描述 一个点每过一个单位时间就会向 4 个方向扩散一个距离，如图所示：两个点 a 、b 连通，记作 e(a,b)，当且仅当 a 、b 的扩散区域有公共部分。连通块的定义是块内的任意两个点 u、v 都必定存在路径e(u, a_0 ),e(a0,a_1),…e(ak,v)。 给定平面上的 n 个点，问最早什么时候它们形成一个连通块。 输入格式 第一行一个数 n ，以下 n 行，每行一个点坐标。 输出格式 输出仅一个数，表示最早的时刻所有点形成连通块。 样例 输入 2 0 0 5 5 输出 5 数据范围与提示 对于 20% 的数据，满足 1≤n≤5,1≤Xi,Yi≤50； 对于 100\%100% 的数据，满足 1≤n≤50,1≤Xi,Yi≤10^9。 思路分析 Floyd算法 本题有两种解法，一是floyd，二是并查集求距离。... </summary> </entry> <entry><title>你好，世界！</title><link href="/posts/hello-world/" rel="alternate" type="text/html" title="你好，世界！" /><published>2022-10-16T01:48:00+00:00</published> <updated>2022-10-16T01:48:00+00:00</updated> <id>/posts/hello-world/</id> <content src="/posts/hello-world/" /> <author> <name>Duyin</name> </author> <category term="随笔" /> <summary> Hello World ~ include&amp;lt;iostream&amp;gt; using namespace std; int main(){ printf("Hello world~"); return 0; } 这是我博客的第一篇文章，也是一个开始，感谢 @汤姆还在写代码 提供的博客框架，以及博客使用方法 </summary> </entry> </feed>
